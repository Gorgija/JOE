// Generated by llvm2cpp - DO NOT MODIFY!


Module* makeLLVMModuleContents(Module *mod) {

mod->setModuleIdentifier("<stdin>");

// Type Definitions
std::vector<Type*>FuncTy_0_args;
StructType *StructTy_JavaObject = mod->getTypeByName("JavaObject");
if (!StructTy_JavaObject) {
StructTy_JavaObject = StructType::create(mod->getContext(), "JavaObject");
}
std::vector<Type*>StructTy_JavaObject_fields;
std::vector<Type*>FuncTy_4_args;
FunctionType* FuncTy_4 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_4_args,
 /*isVarArg=*/true);

PointerType* PointerTy_3 = PointerType::get(FuncTy_4, 0);

ArrayType* ArrayTy_2 = ArrayType::get(PointerTy_3, 0);

PointerType* PointerTy_1 = PointerType::get(ArrayTy_2, 0);

StructTy_JavaObject_fields.push_back(PointerTy_1);
PointerType* PointerTy_5 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);

StructTy_JavaObject_fields.push_back(PointerTy_5);
if (StructTy_JavaObject->isOpaque()) {
StructTy_JavaObject->setBody(StructTy_JavaObject_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_JavaObject);
StructType *StructTy_JavaArray = mod->getTypeByName("JavaArray");
if (!StructTy_JavaArray) {
StructTy_JavaArray = StructType::create(mod->getContext(), "JavaArray");
}
std::vector<Type*>StructTy_JavaArray_fields;
StructTy_JavaArray_fields.push_back(StructTy_JavaObject);
StructTy_JavaArray_fields.push_back(PointerTy_5);
if (StructTy_JavaArray->isOpaque()) {
StructTy_JavaArray->setBody(StructTy_JavaArray_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_JavaArray);
StructType *StructTy_JavaCommonClass = mod->getTypeByName("JavaCommonClass");
if (!StructTy_JavaCommonClass) {
StructTy_JavaCommonClass = StructType::create(mod->getContext(), "JavaCommonClass");
}
std::vector<Type*>StructTy_JavaCommonClass_fields;
PointerType* PointerTy_7 = PointerType::get(StructTy_JavaObject, 0);

ArrayType* ArrayTy_6 = ArrayType::get(PointerTy_7, 1);

StructTy_JavaCommonClass_fields.push_back(ArrayTy_6);
StructTy_JavaCommonClass_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_JavaClass = mod->getTypeByName("JavaClass");
if (!StructTy_JavaClass) {
StructTy_JavaClass = StructType::create(mod->getContext(), "JavaClass");
}
std::vector<Type*>StructTy_JavaClass_fields;
StructTy_JavaClass_fields.push_back(StructTy_JavaCommonClass);
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_TaskClassMirror = mod->getTypeByName("TaskClassMirror");
if (!StructTy_TaskClassMirror) {
StructTy_TaskClassMirror = StructType::create(mod->getContext(), "TaskClassMirror");
}
std::vector<Type*>StructTy_TaskClassMirror_fields;
StructTy_TaskClassMirror_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_TaskClassMirror_fields.push_back(IntegerType::get(mod->getContext(), 1));
StructTy_TaskClassMirror_fields.push_back(PointerTy_5);
if (StructTy_TaskClassMirror->isOpaque()) {
StructTy_TaskClassMirror->setBody(StructTy_TaskClassMirror_fields, /*isPacked=*/false);
}

ArrayType* ArrayTy_10 = ArrayType::get(StructTy_TaskClassMirror, 1);

StructTy_JavaClass_fields.push_back(ArrayTy_10);
StructType *StructTy_JavaField = mod->getTypeByName("JavaField");
if (!StructTy_JavaField) {
StructTy_JavaField = StructType::create(mod->getContext(), "JavaField");
}
std::vector<Type*>StructTy_JavaField_fields;
StructTy_JavaField_fields.push_back(PointerTy_5);
StructTy_JavaField_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructType *StructTy_UTF8 = mod->getTypeByName("UTF8");
if (!StructTy_UTF8) {
StructTy_UTF8 = StructType::create(mod->getContext(), "UTF8");
}
std::vector<Type*>StructTy_UTF8_fields;
StructTy_UTF8_fields.push_back(PointerTy_5);
ArrayType* ArrayTy_13 = ArrayType::get(IntegerType::get(mod->getContext(), 16), 0);

StructTy_UTF8_fields.push_back(ArrayTy_13);
if (StructTy_UTF8->isOpaque()) {
StructTy_UTF8->setBody(StructTy_UTF8_fields, /*isPacked=*/false);
}

PointerType* PointerTy_12 = PointerType::get(StructTy_UTF8, 0);

StructTy_JavaField_fields.push_back(PointerTy_12);
StructTy_JavaField_fields.push_back(PointerTy_12);
StructType *StructTy_Attribut = mod->getTypeByName("Attribut");
if (!StructTy_Attribut) {
StructTy_Attribut = StructType::create(mod->getContext(), "Attribut");
}
std::vector<Type*>StructTy_Attribut_fields;
StructTy_Attribut_fields.push_back(PointerTy_12);
StructTy_Attribut_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_Attribut_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_Attribut->isOpaque()) {
StructTy_Attribut->setBody(StructTy_Attribut_fields, /*isPacked=*/false);
}

PointerType* PointerTy_14 = PointerType::get(StructTy_Attribut, 0);

StructTy_JavaField_fields.push_back(PointerTy_14);
StructTy_JavaField_fields.push_back(IntegerType::get(mod->getContext(), 16));
PointerType* PointerTy_9 = PointerType::get(StructTy_JavaClass, 0);

StructTy_JavaField_fields.push_back(PointerTy_9);
StructTy_JavaField_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_JavaField_fields.push_back(IntegerType::get(mod->getContext(), 16));
if (StructTy_JavaField->isOpaque()) {
StructTy_JavaField->setBody(StructTy_JavaField_fields, /*isPacked=*/false);
}

PointerType* PointerTy_11 = PointerType::get(StructTy_JavaField, 0);

StructTy_JavaClass_fields.push_back(PointerTy_11);
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_JavaClass_fields.push_back(PointerTy_11);
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructType *StructTy_JavaMethod = mod->getTypeByName("JavaMethod");
if (!StructTy_JavaMethod) {
StructTy_JavaMethod = StructType::create(mod->getContext(), "JavaMethod");
}
std::vector<Type*>StructTy_JavaMethod_fields;
StructTy_JavaMethod_fields.push_back(PointerTy_5);
StructTy_JavaMethod_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_JavaMethod_fields.push_back(PointerTy_14);
StructTy_JavaMethod_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_JavaMethod_fields.push_back(PointerTy_9);
StructTy_JavaMethod_fields.push_back(PointerTy_12);
StructTy_JavaMethod_fields.push_back(PointerTy_12);
StructTy_JavaMethod_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_JavaMethod_fields.push_back(PointerTy_5);
StructTy_JavaMethod_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_JavaMethod->isOpaque()) {
StructTy_JavaMethod->setBody(StructTy_JavaMethod_fields, /*isPacked=*/false);
}

PointerType* PointerTy_15 = PointerType::get(StructTy_JavaMethod, 0);

StructTy_JavaClass_fields.push_back(PointerTy_15);
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_JavaClass_fields.push_back(PointerTy_15);
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_JavaClass_fields.push_back(PointerTy_5);
StructType *StructTy_ClassBytes = mod->getTypeByName("ClassBytes");
if (!StructTy_ClassBytes) {
StructTy_ClassBytes = StructType::create(mod->getContext(), "ClassBytes");
}
std::vector<Type*>StructTy_ClassBytes_fields;
StructTy_ClassBytes_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_ClassBytes_fields.push_back(PointerTy_5);
if (StructTy_ClassBytes->isOpaque()) {
StructTy_ClassBytes->setBody(StructTy_ClassBytes_fields, /*isPacked=*/false);
}

PointerType* PointerTy_16 = PointerType::get(StructTy_ClassBytes, 0);

StructTy_JavaClass_fields.push_back(PointerTy_16);
StructType *StructTy_JavaConstantPool = mod->getTypeByName("JavaConstantPool");
if (!StructTy_JavaConstantPool) {
StructTy_JavaConstantPool = StructType::create(mod->getContext(), "JavaConstantPool");
}
std::vector<Type*>StructTy_JavaConstantPool_fields;
StructTy_JavaConstantPool_fields.push_back(PointerTy_9);
StructTy_JavaConstantPool_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_JavaConstantPool_fields.push_back(PointerTy_5);
PointerType* PointerTy_18 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);

StructTy_JavaConstantPool_fields.push_back(PointerTy_18);
PointerType* PointerTy_19 = PointerType::get(PointerTy_5, 0);

StructTy_JavaConstantPool_fields.push_back(PointerTy_19);
if (StructTy_JavaConstantPool->isOpaque()) {
StructTy_JavaConstantPool->setBody(StructTy_JavaConstantPool_fields, /*isPacked=*/false);
}

PointerType* PointerTy_17 = PointerType::get(StructTy_JavaConstantPool, 0);

StructTy_JavaClass_fields.push_back(PointerTy_17);
StructTy_JavaClass_fields.push_back(PointerTy_14);
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 16));
PointerType* PointerTy_8 = PointerType::get(PointerTy_9, 0);

StructTy_JavaClass_fields.push_back(PointerTy_8);
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_JavaClass_fields.push_back(PointerTy_9);
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_JavaClass_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_JavaClass->isOpaque()) {
StructTy_JavaClass->setBody(StructTy_JavaClass_fields, /*isPacked=*/false);
}



StructTy_JavaCommonClass_fields.push_back(PointerTy_8);
StructTy_JavaCommonClass_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_JavaCommonClass_fields.push_back(PointerTy_12);
StructTy_JavaCommonClass_fields.push_back(PointerTy_9);
StructTy_JavaCommonClass_fields.push_back(PointerTy_5);
StructTy_JavaCommonClass_fields.push_back(PointerTy_1);
if (StructTy_JavaCommonClass->isOpaque()) {
StructTy_JavaCommonClass->setBody(StructTy_JavaCommonClass_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_JavaCommonClass);
StructType *StructTy_JavaClassPrimitive = mod->getTypeByName("JavaClassPrimitive");
if (!StructTy_JavaClassPrimitive) {
StructTy_JavaClassPrimitive = StructType::create(mod->getContext(), "JavaClassPrimitive");
}
std::vector<Type*>StructTy_JavaClassPrimitive_fields;
StructTy_JavaClassPrimitive_fields.push_back(StructTy_JavaCommonClass);
StructTy_JavaClassPrimitive_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_JavaClassPrimitive->isOpaque()) {
StructTy_JavaClassPrimitive->setBody(StructTy_JavaClassPrimitive_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_JavaClassPrimitive);
StructType *StructTy_JavaClassArray = mod->getTypeByName("JavaClassArray");
if (!StructTy_JavaClassArray) {
StructTy_JavaClassArray = StructType::create(mod->getContext(), "JavaClassArray");
}
std::vector<Type*>StructTy_JavaClassArray_fields;
StructTy_JavaClassArray_fields.push_back(StructTy_JavaCommonClass);
PointerType* PointerTy_20 = PointerType::get(StructTy_JavaCommonClass, 0);

StructTy_JavaClassArray_fields.push_back(PointerTy_20);
if (StructTy_JavaClassArray->isOpaque()) {
StructTy_JavaClassArray->setBody(StructTy_JavaClassArray_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_JavaClassArray);
FuncTy_0_args.push_back(StructTy_JavaClass);
FuncTy_0_args.push_back(StructTy_ClassBytes);
FuncTy_0_args.push_back(StructTy_JavaConstantPool);
StructType *StructTy_ArrayUInt8 = mod->getTypeByName("ArrayUInt8");
if (!StructTy_ArrayUInt8) {
StructTy_ArrayUInt8 = StructType::create(mod->getContext(), "ArrayUInt8");
}
std::vector<Type*>StructTy_ArrayUInt8_fields;
StructTy_ArrayUInt8_fields.push_back(StructTy_JavaObject);
StructTy_ArrayUInt8_fields.push_back(PointerTy_5);
ArrayType* ArrayTy_21 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 0);

StructTy_ArrayUInt8_fields.push_back(ArrayTy_21);
if (StructTy_ArrayUInt8->isOpaque()) {
StructTy_ArrayUInt8->setBody(StructTy_ArrayUInt8_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArrayUInt8);
StructType *StructTy_ArraySInt8 = mod->getTypeByName("ArraySInt8");
if (!StructTy_ArraySInt8) {
StructTy_ArraySInt8 = StructType::create(mod->getContext(), "ArraySInt8");
}
std::vector<Type*>StructTy_ArraySInt8_fields;
StructTy_ArraySInt8_fields.push_back(StructTy_JavaObject);
StructTy_ArraySInt8_fields.push_back(PointerTy_5);
StructTy_ArraySInt8_fields.push_back(ArrayTy_21);
if (StructTy_ArraySInt8->isOpaque()) {
StructTy_ArraySInt8->setBody(StructTy_ArraySInt8_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArraySInt8);
StructType *StructTy_ArrayUInt16 = mod->getTypeByName("ArrayUInt16");
if (!StructTy_ArrayUInt16) {
StructTy_ArrayUInt16 = StructType::create(mod->getContext(), "ArrayUInt16");
}
std::vector<Type*>StructTy_ArrayUInt16_fields;
StructTy_ArrayUInt16_fields.push_back(StructTy_JavaObject);
StructTy_ArrayUInt16_fields.push_back(PointerTy_5);
StructTy_ArrayUInt16_fields.push_back(ArrayTy_13);
if (StructTy_ArrayUInt16->isOpaque()) {
StructTy_ArrayUInt16->setBody(StructTy_ArrayUInt16_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArrayUInt16);
StructType *StructTy_ArraySInt16 = mod->getTypeByName("ArraySInt16");
if (!StructTy_ArraySInt16) {
StructTy_ArraySInt16 = StructType::create(mod->getContext(), "ArraySInt16");
}
std::vector<Type*>StructTy_ArraySInt16_fields;
StructTy_ArraySInt16_fields.push_back(StructTy_JavaObject);
StructTy_ArraySInt16_fields.push_back(PointerTy_5);
StructTy_ArraySInt16_fields.push_back(ArrayTy_13);
if (StructTy_ArraySInt16->isOpaque()) {
StructTy_ArraySInt16->setBody(StructTy_ArraySInt16_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArraySInt16);
StructType *StructTy_ArrayUInt32 = mod->getTypeByName("ArrayUInt32");
if (!StructTy_ArrayUInt32) {
StructTy_ArrayUInt32 = StructType::create(mod->getContext(), "ArrayUInt32");
}
std::vector<Type*>StructTy_ArrayUInt32_fields;
StructTy_ArrayUInt32_fields.push_back(StructTy_JavaObject);
StructTy_ArrayUInt32_fields.push_back(PointerTy_5);
ArrayType* ArrayTy_22 = ArrayType::get(IntegerType::get(mod->getContext(), 32), 0);

StructTy_ArrayUInt32_fields.push_back(ArrayTy_22);
if (StructTy_ArrayUInt32->isOpaque()) {
StructTy_ArrayUInt32->setBody(StructTy_ArrayUInt32_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArrayUInt32);
StructType *StructTy_ArraySInt32 = mod->getTypeByName("ArraySInt32");
if (!StructTy_ArraySInt32) {
StructTy_ArraySInt32 = StructType::create(mod->getContext(), "ArraySInt32");
}
std::vector<Type*>StructTy_ArraySInt32_fields;
StructTy_ArraySInt32_fields.push_back(StructTy_JavaObject);
StructTy_ArraySInt32_fields.push_back(PointerTy_5);
StructTy_ArraySInt32_fields.push_back(ArrayTy_22);
if (StructTy_ArraySInt32->isOpaque()) {
StructTy_ArraySInt32->setBody(StructTy_ArraySInt32_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArraySInt32);
StructType *StructTy_ArrayLong = mod->getTypeByName("ArrayLong");
if (!StructTy_ArrayLong) {
StructTy_ArrayLong = StructType::create(mod->getContext(), "ArrayLong");
}
std::vector<Type*>StructTy_ArrayLong_fields;
StructTy_ArrayLong_fields.push_back(StructTy_JavaObject);
StructTy_ArrayLong_fields.push_back(PointerTy_5);
ArrayType* ArrayTy_23 = ArrayType::get(IntegerType::get(mod->getContext(), 64), 0);

StructTy_ArrayLong_fields.push_back(ArrayTy_23);
if (StructTy_ArrayLong->isOpaque()) {
StructTy_ArrayLong->setBody(StructTy_ArrayLong_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArrayLong);
StructType *StructTy_ArrayDouble = mod->getTypeByName("ArrayDouble");
if (!StructTy_ArrayDouble) {
StructTy_ArrayDouble = StructType::create(mod->getContext(), "ArrayDouble");
}
std::vector<Type*>StructTy_ArrayDouble_fields;
StructTy_ArrayDouble_fields.push_back(StructTy_JavaObject);
StructTy_ArrayDouble_fields.push_back(PointerTy_5);
ArrayType* ArrayTy_24 = ArrayType::get(Type::getDoubleTy(mod->getContext()), 0);

StructTy_ArrayDouble_fields.push_back(ArrayTy_24);
if (StructTy_ArrayDouble->isOpaque()) {
StructTy_ArrayDouble->setBody(StructTy_ArrayDouble_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArrayDouble);
StructType *StructTy_ArrayFloat = mod->getTypeByName("ArrayFloat");
if (!StructTy_ArrayFloat) {
StructTy_ArrayFloat = StructType::create(mod->getContext(), "ArrayFloat");
}
std::vector<Type*>StructTy_ArrayFloat_fields;
StructTy_ArrayFloat_fields.push_back(StructTy_JavaObject);
StructTy_ArrayFloat_fields.push_back(PointerTy_5);
ArrayType* ArrayTy_25 = ArrayType::get(Type::getFloatTy(mod->getContext()), 0);

StructTy_ArrayFloat_fields.push_back(ArrayTy_25);
if (StructTy_ArrayFloat->isOpaque()) {
StructTy_ArrayFloat->setBody(StructTy_ArrayFloat_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArrayFloat);
StructType *StructTy_ArrayObject = mod->getTypeByName("ArrayObject");
if (!StructTy_ArrayObject) {
StructTy_ArrayObject = StructType::create(mod->getContext(), "ArrayObject");
}
std::vector<Type*>StructTy_ArrayObject_fields;
StructTy_ArrayObject_fields.push_back(StructTy_JavaObject);
StructTy_ArrayObject_fields.push_back(PointerTy_5);
ArrayType* ArrayTy_26 = ArrayType::get(PointerTy_7, 0);

StructTy_ArrayObject_fields.push_back(ArrayTy_26);
if (StructTy_ArrayObject->isOpaque()) {
StructTy_ArrayObject->setBody(StructTy_ArrayObject_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_ArrayObject);
FuncTy_0_args.push_back(StructTy_JavaField);
FuncTy_0_args.push_back(StructTy_JavaMethod);
FuncTy_0_args.push_back(StructTy_UTF8);
FuncTy_0_args.push_back(StructTy_Attribut);
StructType *StructTy_JavaThread = mod->getTypeByName("JavaThread");
if (!StructTy_JavaThread) {
StructTy_JavaThread = StructType::create(mod->getContext(), "JavaThread");
}
std::vector<Type*>StructTy_JavaThread_fields;
StructType *StructTy_MutatorThread = mod->getTypeByName("MutatorThread");
if (!StructTy_MutatorThread) {
StructTy_MutatorThread = StructType::create(mod->getContext(), "MutatorThread");
}
std::vector<Type*>StructTy_MutatorThread_fields;
StructType *StructTy_Thread = mod->getTypeByName("Thread");
if (!StructTy_Thread) {
StructTy_Thread = StructType::create(mod->getContext(), "Thread");
}
std::vector<Type*>StructTy_Thread_fields;
StructType *StructTy_CircularBase = mod->getTypeByName("CircularBase");
if (!StructTy_CircularBase) {
StructTy_CircularBase = StructType::create(mod->getContext(), "CircularBase");
}
std::vector<Type*>StructTy_CircularBase_fields;
StructTy_CircularBase_fields.push_back(PointerTy_1);
PointerType* PointerTy_27 = PointerType::get(StructTy_CircularBase, 0);

StructTy_CircularBase_fields.push_back(PointerTy_27);
StructTy_CircularBase_fields.push_back(PointerTy_27);
if (StructTy_CircularBase->isOpaque()) {
StructTy_CircularBase->setBody(StructTy_CircularBase_fields, /*isPacked=*/false);
}

StructTy_Thread_fields.push_back(StructTy_CircularBase);
StructTy_Thread_fields.push_back(PointerTy_5);
StructTy_Thread_fields.push_back(PointerTy_5);
StructTy_Thread_fields.push_back(PointerTy_5);
StructTy_Thread_fields.push_back(IntegerType::get(mod->getContext(), 1));
StructTy_Thread_fields.push_back(IntegerType::get(mod->getContext(), 1));
StructTy_Thread_fields.push_back(IntegerType::get(mod->getContext(), 1));
StructTy_Thread_fields.push_back(PointerTy_5);
StructTy_Thread_fields.push_back(PointerTy_5);
StructTy_Thread_fields.push_back(PointerTy_5);
StructTy_Thread_fields.push_back(PointerTy_5);
StructTy_Thread_fields.push_back(PointerTy_5);
if (StructTy_Thread->isOpaque()) {
StructTy_Thread->setBody(StructTy_Thread_fields, /*isPacked=*/false);
}

StructTy_MutatorThread_fields.push_back(StructTy_Thread);
StructType *StructTy_ThreadAllocator = mod->getTypeByName("ThreadAllocator");
if (!StructTy_ThreadAllocator) {
StructTy_ThreadAllocator = StructType::create(mod->getContext(), "ThreadAllocator");
}
std::vector<Type*>StructTy_ThreadAllocator_fields;
StructTy_ThreadAllocator_fields.push_back(PointerTy_5);
StructTy_ThreadAllocator_fields.push_back(PointerTy_5);
StructTy_ThreadAllocator_fields.push_back(PointerTy_5);
StructTy_ThreadAllocator_fields.push_back(PointerTy_5);
StructTy_ThreadAllocator_fields.push_back(PointerTy_5);
StructTy_ThreadAllocator_fields.push_back(PointerTy_5);
StructTy_ThreadAllocator_fields.push_back(PointerTy_5);
if (StructTy_ThreadAllocator->isOpaque()) {
StructTy_ThreadAllocator->setBody(StructTy_ThreadAllocator_fields, /*isPacked=*/false);
}

StructTy_MutatorThread_fields.push_back(StructTy_ThreadAllocator);
StructTy_MutatorThread_fields.push_back(PointerTy_5);
StructTy_MutatorThread_fields.push_back(PointerTy_5);
StructTy_MutatorThread_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_MutatorThread->isOpaque()) {
StructTy_MutatorThread->setBody(StructTy_MutatorThread_fields, /*isPacked=*/false);
}

StructTy_JavaThread_fields.push_back(StructTy_MutatorThread);
StructTy_JavaThread_fields.push_back(PointerTy_5);
StructTy_JavaThread_fields.push_back(PointerTy_7);
if (StructTy_JavaThread->isOpaque()) {
StructTy_JavaThread->setBody(StructTy_JavaThread_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_JavaThread);
FuncTy_0_args.push_back(StructTy_MutatorThread);
StructType *StructTy_J3DenseMap = mod->getTypeByName("J3DenseMap");
if (!StructTy_J3DenseMap) {
StructTy_J3DenseMap = StructType::create(mod->getContext(), "J3DenseMap");
}
std::vector<Type*>StructTy_J3DenseMap_fields;
StructTy_J3DenseMap_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_J3DenseMap_fields.push_back(PointerTy_5);
StructTy_J3DenseMap_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_J3DenseMap_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_J3DenseMap_fields.push_back(IntegerType::get(mod->getContext(), 1));
if (StructTy_J3DenseMap->isOpaque()) {
StructTy_J3DenseMap->setBody(StructTy_J3DenseMap_fields, /*isPacked=*/false);
}

FuncTy_0_args.push_back(StructTy_J3DenseMap);
FunctionType* FuncTy_0 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_0_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_28_args;
FuncTy_28_args.push_back(PointerTy_9);
FunctionType* FuncTy_28 = FunctionType::get(
 /*Result=*/PointerTy_9,
 /*Params=*/FuncTy_28_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_29_args;
FuncTy_29_args.push_back(PointerTy_7);
FunctionType* FuncTy_29 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_29_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_30_args;
FuncTy_30_args.push_back(PointerTy_7);
FunctionType* FuncTy_30 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_30_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_31_args;
FuncTy_31_args.push_back(PointerTy_1);
FunctionType* FuncTy_31 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_31_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_32_args;
FuncTy_32_args.push_back(PointerTy_7);
FunctionType* FuncTy_32 = FunctionType::get(
 /*Result=*/PointerTy_20,
 /*Params=*/FuncTy_32_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_33_args;
FuncTy_33_args.push_back(PointerTy_7);
FunctionType* FuncTy_33 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_33_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_34_args;
FuncTy_34_args.push_back(PointerTy_20);
FunctionType* FuncTy_34 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_34_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_35_args;
FuncTy_35_args.push_back(PointerTy_9);
FunctionType* FuncTy_35 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_35_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_36_args;
PointerType* PointerTy_37 = PointerType::get(StructTy_JavaClassArray, 0);

FuncTy_36_args.push_back(PointerTy_37);
FunctionType* FuncTy_36 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_36_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_38_args;
FuncTy_38_args.push_back(PointerTy_9);
FunctionType* FuncTy_38 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_38_args,
 /*isVarArg=*/false);

PointerType* PointerTy_39 = PointerType::get(PointerTy_1, 0);

std::vector<Type*>FuncTy_40_args;
FuncTy_40_args.push_back(PointerTy_1);
FunctionType* FuncTy_40 = FunctionType::get(
 /*Result=*/PointerTy_39,
 /*Params=*/FuncTy_40_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_41_args;
FuncTy_41_args.push_back(PointerTy_39);
FuncTy_41_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_41 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_41_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_42_args;
FuncTy_42_args.push_back(PointerTy_1);
FunctionType* FuncTy_42 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_42_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_43_args;
FuncTy_43_args.push_back(PointerTy_9);
FunctionType* FuncTy_43 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_43_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_44_args;
FuncTy_44_args.push_back(PointerTy_9);
FuncTy_44_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_44 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_44_args,
 /*isVarArg=*/true);

std::vector<Type*>FuncTy_45_args;
FuncTy_45_args.push_back(PointerTy_20);
FuncTy_45_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_45 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_45_args,
 /*isVarArg=*/true);

std::vector<Type*>FuncTy_46_args;
FuncTy_46_args.push_back(PointerTy_9);
FunctionType* FuncTy_46 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_46_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_47_args;
FuncTy_47_args.push_back(PointerTy_20);
FunctionType* FuncTy_47 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_47_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_48_args;
PointerType* PointerTy_49 = PointerType::get(FuncTy_44, 0);

FuncTy_48_args.push_back(PointerTy_49);
FuncTy_48_args.push_back(PointerTy_19);
FuncTy_48_args.push_back(PointerTy_9);
FuncTy_48_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_48 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_48_args,
 /*isVarArg=*/true);

std::vector<Type*>FuncTy_50_args;
FuncTy_50_args.push_back(PointerTy_9);
FuncTy_50_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_50_args.push_back(PointerTy_18);
FuncTy_50_args.push_back(PointerTy_7);
FunctionType* FuncTy_50 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_50_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_51_args;
FuncTy_51_args.push_back(PointerTy_7);
FunctionType* FuncTy_51 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_51_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_52_args;
FuncTy_52_args.push_back(PointerTy_1);
FuncTy_52_args.push_back(PointerTy_1);
FunctionType* FuncTy_52 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 1),
 /*Params=*/FuncTy_52_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_53_args;
FuncTy_53_args.push_back(PointerTy_20);
FunctionType* FuncTy_53 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_53_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_54_args;
FuncTy_54_args.push_back(PointerTy_9);
FuncTy_54_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_54_args.push_back(PointerTy_39);
FunctionType* FuncTy_54 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_54_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_55_args;
FuncTy_55_args.push_back(PointerTy_5);
FunctionType* FuncTy_55 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_55_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_56_args;
PointerType* PointerTy_57 = PointerType::get(IntegerType::get(mod->getContext(), 16), 0);

FuncTy_56_args.push_back(PointerTy_57);
FunctionType* FuncTy_56 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_56_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_58_args;
FuncTy_58_args.push_back(PointerTy_18);
FunctionType* FuncTy_58 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_58_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_59_args;
PointerType* PointerTy_60 = PointerType::get(IntegerType::get(mod->getContext(), 64), 0);

FuncTy_59_args.push_back(PointerTy_60);
FunctionType* FuncTy_59 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_59_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_61_args;
PointerType* PointerTy_62 = PointerType::get(Type::getDoubleTy(mod->getContext()), 0);

FuncTy_61_args.push_back(PointerTy_62);
FunctionType* FuncTy_61 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_61_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_63_args;
PointerType* PointerTy_64 = PointerType::get(Type::getFloatTy(mod->getContext()), 0);

FuncTy_63_args.push_back(PointerTy_64);
FunctionType* FuncTy_63 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_63_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_65_args;
FunctionType* FuncTy_65 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_65_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_66_args;
FuncTy_66_args.push_back(PointerTy_7);
FuncTy_66_args.push_back(PointerTy_15);
FuncTy_66_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_66 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_66_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_67_args;
FunctionType* FuncTy_67 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_67_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_68_args;
FuncTy_68_args.push_back(PointerTy_7);
FuncTy_68_args.push_back(PointerTy_20);
FunctionType* FuncTy_68 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_68_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_69_args;
FuncTy_69_args.push_back(PointerTy_7);
FuncTy_69_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_69 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_69_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_70_args;
FuncTy_70_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_70 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_70_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_71_args;
FuncTy_71_args.push_back(PointerTy_1);
FuncTy_71_args.push_back(PointerTy_1);
FunctionType* FuncTy_71 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_71_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_72_args;
FunctionType* FuncTy_72 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_72_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_73_args;
PointerType* PointerTy_74 = PointerType::get(PointerTy_18, 0);

FuncTy_73_args.push_back(PointerTy_74);
FunctionType* FuncTy_73 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_73_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_75_args;
FuncTy_75_args.push_back(PointerTy_18);
FuncTy_75_args.push_back(PointerTy_74);
FuncTy_75_args.push_back(PointerTy_5);
FunctionType* FuncTy_75 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_75_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_76_args;
FuncTy_76_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_76_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_76_args.push_back(PointerTy_15);
FunctionType* FuncTy_76 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_76_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_77_args;
FuncTy_77_args.push_back(PointerTy_15);
FunctionType* FuncTy_77 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_77_args,
 /*isVarArg=*/false);


// Function Declarations

Function* func_listAllTypes = mod->getFunction("listAllTypes");
if (!func_listAllTypes) {
func_listAllTypes = Function::Create(
 /*Type=*/FuncTy_0,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"listAllTypes", mod); // (external, no body)
func_listAllTypes->setCallingConv(CallingConv::C);
}
AttrListPtr func_listAllTypes_PAL;
func_listAllTypes->setAttributes(func_listAllTypes_PAL);

Function* func_j3RuntimeInitialiseClass = mod->getFunction("j3RuntimeInitialiseClass");
if (!func_j3RuntimeInitialiseClass) {
func_j3RuntimeInitialiseClass = Function::Create(
 /*Type=*/FuncTy_28,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3RuntimeInitialiseClass", mod); // (external, no body)
func_j3RuntimeInitialiseClass->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3RuntimeInitialiseClass_PAL;
func_j3RuntimeInitialiseClass->setAttributes(func_j3RuntimeInitialiseClass_PAL);

Function* func_arrayLength = mod->getFunction("arrayLength");
if (!func_arrayLength) {
func_arrayLength = Function::Create(
 /*Type=*/FuncTy_29,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"arrayLength", mod); // (external, no body)
func_arrayLength->setCallingConv(CallingConv::C);
}
AttrListPtr func_arrayLength_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_arrayLength_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_arrayLength->setAttributes(func_arrayLength_PAL);

Function* func_getVT = mod->getFunction("getVT");
if (!func_getVT) {
func_getVT = Function::Create(
 /*Type=*/FuncTy_30,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getVT", mod); // (external, no body)
func_getVT->setCallingConv(CallingConv::C);
}
AttrListPtr func_getVT_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getVT_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getVT->setAttributes(func_getVT_PAL);

Function* func_getIMT = mod->getFunction("getIMT");
if (!func_getIMT) {
func_getIMT = Function::Create(
 /*Type=*/FuncTy_31,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getIMT", mod); // (external, no body)
func_getIMT->setCallingConv(CallingConv::C);
}
AttrListPtr func_getIMT_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getIMT_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getIMT->setAttributes(func_getIMT_PAL);

Function* func_getClass = mod->getFunction("getClass");
if (!func_getClass) {
func_getClass = Function::Create(
 /*Type=*/FuncTy_32,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getClass", mod); // (external, no body)
func_getClass->setCallingConv(CallingConv::C);
}
AttrListPtr func_getClass_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getClass_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getClass->setAttributes(func_getClass_PAL);

Function* func_getLock = mod->getFunction("getLock");
if (!func_getLock) {
func_getLock = Function::Create(
 /*Type=*/FuncTy_33,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getLock", mod); // (external, no body)
func_getLock->setCallingConv(CallingConv::C);
}
AttrListPtr func_getLock_PAL;
func_getLock->setAttributes(func_getLock_PAL);

Function* func_getVTFromCommonClass = mod->getFunction("getVTFromCommonClass");
if (!func_getVTFromCommonClass) {
func_getVTFromCommonClass = Function::Create(
 /*Type=*/FuncTy_34,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getVTFromCommonClass", mod); // (external, no body)
func_getVTFromCommonClass->setCallingConv(CallingConv::C);
}
AttrListPtr func_getVTFromCommonClass_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getVTFromCommonClass_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getVTFromCommonClass->setAttributes(func_getVTFromCommonClass_PAL);

Function* func_getVTFromClass = mod->getFunction("getVTFromClass");
if (!func_getVTFromClass) {
func_getVTFromClass = Function::Create(
 /*Type=*/FuncTy_35,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getVTFromClass", mod); // (external, no body)
func_getVTFromClass->setCallingConv(CallingConv::C);
}
AttrListPtr func_getVTFromClass_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getVTFromClass_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getVTFromClass->setAttributes(func_getVTFromClass_PAL);

Function* func_getVTFromClassArray = mod->getFunction("getVTFromClassArray");
if (!func_getVTFromClassArray) {
func_getVTFromClassArray = Function::Create(
 /*Type=*/FuncTy_36,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getVTFromClassArray", mod); // (external, no body)
func_getVTFromClassArray->setCallingConv(CallingConv::C);
}
AttrListPtr func_getVTFromClassArray_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getVTFromClassArray_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getVTFromClassArray->setAttributes(func_getVTFromClassArray_PAL);

Function* func_getObjectSizeFromClass = mod->getFunction("getObjectSizeFromClass");
if (!func_getObjectSizeFromClass) {
func_getObjectSizeFromClass = Function::Create(
 /*Type=*/FuncTy_38,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getObjectSizeFromClass", mod); // (external, no body)
func_getObjectSizeFromClass->setCallingConv(CallingConv::C);
}
AttrListPtr func_getObjectSizeFromClass_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getObjectSizeFromClass_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getObjectSizeFromClass->setAttributes(func_getObjectSizeFromClass_PAL);

Function* func_getBaseClassVTFromVT = mod->getFunction("getBaseClassVTFromVT");
if (!func_getBaseClassVTFromVT) {
func_getBaseClassVTFromVT = Function::Create(
 /*Type=*/FuncTy_31,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getBaseClassVTFromVT", mod); // (external, no body)
func_getBaseClassVTFromVT->setCallingConv(CallingConv::C);
}
AttrListPtr func_getBaseClassVTFromVT_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getBaseClassVTFromVT_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getBaseClassVTFromVT->setAttributes(func_getBaseClassVTFromVT_PAL);

Function* func_getDisplay = mod->getFunction("getDisplay");
if (!func_getDisplay) {
func_getDisplay = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getDisplay", mod); // (external, no body)
func_getDisplay->setCallingConv(CallingConv::C);
}
AttrListPtr func_getDisplay_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getDisplay_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getDisplay->setAttributes(func_getDisplay_PAL);

Function* func_getVTInDisplay = mod->getFunction("getVTInDisplay");
if (!func_getVTInDisplay) {
func_getVTInDisplay = Function::Create(
 /*Type=*/FuncTy_41,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getVTInDisplay", mod); // (external, no body)
func_getVTInDisplay->setCallingConv(CallingConv::C);
}
AttrListPtr func_getVTInDisplay_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getVTInDisplay_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getVTInDisplay->setAttributes(func_getVTInDisplay_PAL);

Function* func_getDepth = mod->getFunction("getDepth");
if (!func_getDepth) {
func_getDepth = Function::Create(
 /*Type=*/FuncTy_42,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getDepth", mod); // (external, no body)
func_getDepth->setCallingConv(CallingConv::C);
}
AttrListPtr func_getDepth_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getDepth_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getDepth->setAttributes(func_getDepth_PAL);

Function* func_getStaticInstance = mod->getFunction("getStaticInstance");
if (!func_getStaticInstance) {
func_getStaticInstance = Function::Create(
 /*Type=*/FuncTy_43,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getStaticInstance", mod); // (external, no body)
func_getStaticInstance->setCallingConv(CallingConv::C);
}
AttrListPtr func_getStaticInstance_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getStaticInstance_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getStaticInstance->setAttributes(func_getStaticInstance_PAL);

Function* func_j3InterfaceLookup = mod->getFunction("j3InterfaceLookup");
if (!func_j3InterfaceLookup) {
func_j3InterfaceLookup = Function::Create(
 /*Type=*/FuncTy_44,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3InterfaceLookup", mod); // (external, no body)
func_j3InterfaceLookup->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3InterfaceLookup_PAL;
func_j3InterfaceLookup->setAttributes(func_j3InterfaceLookup_PAL);

Function* func_j3MultiCallNew = mod->getFunction("j3MultiCallNew");
if (!func_j3MultiCallNew) {
func_j3MultiCallNew = Function::Create(
 /*Type=*/FuncTy_45,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3MultiCallNew", mod); // (external, no body)
func_j3MultiCallNew->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3MultiCallNew_PAL;
func_j3MultiCallNew->setAttributes(func_j3MultiCallNew_PAL);

Function* func_initialisationCheck = mod->getFunction("initialisationCheck");
if (!func_initialisationCheck) {
func_initialisationCheck = Function::Create(
 /*Type=*/FuncTy_28,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"initialisationCheck", mod); // (external, no body)
func_initialisationCheck->setCallingConv(CallingConv::C);
}
AttrListPtr func_initialisationCheck_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_initialisationCheck_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_initialisationCheck->setAttributes(func_initialisationCheck_PAL);

Function* func_forceInitialisationCheck = mod->getFunction("forceInitialisationCheck");
if (!func_forceInitialisationCheck) {
func_forceInitialisationCheck = Function::Create(
 /*Type=*/FuncTy_46,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"forceInitialisationCheck", mod); // (external, no body)
func_forceInitialisationCheck->setCallingConv(CallingConv::C);
}
AttrListPtr func_forceInitialisationCheck_PAL;
func_forceInitialisationCheck->setAttributes(func_forceInitialisationCheck_PAL);

Function* func_forceLoadedCheck = mod->getFunction("forceLoadedCheck");
if (!func_forceLoadedCheck) {
func_forceLoadedCheck = Function::Create(
 /*Type=*/FuncTy_47,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"forceLoadedCheck", mod); // (external, no body)
func_forceLoadedCheck->setCallingConv(CallingConv::C);
}
AttrListPtr func_forceLoadedCheck_PAL;
func_forceLoadedCheck->setAttributes(func_forceLoadedCheck_PAL);

Function* func_getConstantPoolAt = mod->getFunction("getConstantPoolAt");
if (!func_getConstantPoolAt) {
func_getConstantPoolAt = Function::Create(
 /*Type=*/FuncTy_48,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getConstantPoolAt", mod); // (external, no body)
func_getConstantPoolAt->setCallingConv(CallingConv::C);
}
AttrListPtr func_getConstantPoolAt_PAL;
func_getConstantPoolAt->setAttributes(func_getConstantPoolAt_PAL);

Function* func_j3VirtualTableLookup = mod->getFunction("j3VirtualTableLookup");
if (!func_j3VirtualTableLookup) {
func_j3VirtualTableLookup = Function::Create(
 /*Type=*/FuncTy_50,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3VirtualTableLookup", mod); // (external, no body)
func_j3VirtualTableLookup->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3VirtualTableLookup_PAL;
func_j3VirtualTableLookup->setAttributes(func_j3VirtualTableLookup_PAL);

Function* func_j3ClassLookup = mod->getFunction("j3ClassLookup");
if (!func_j3ClassLookup) {
func_j3ClassLookup = Function::Create(
 /*Type=*/FuncTy_44,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ClassLookup", mod); // (external, no body)
func_j3ClassLookup->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ClassLookup_PAL;
func_j3ClassLookup->setAttributes(func_j3ClassLookup_PAL);

Function* func_j3VirtualFieldLookup = mod->getFunction("j3VirtualFieldLookup");
if (!func_j3VirtualFieldLookup) {
func_j3VirtualFieldLookup = Function::Create(
 /*Type=*/FuncTy_44,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3VirtualFieldLookup", mod); // (external, no body)
func_j3VirtualFieldLookup->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3VirtualFieldLookup_PAL;
func_j3VirtualFieldLookup->setAttributes(func_j3VirtualFieldLookup_PAL);

Function* func_j3StaticFieldLookup = mod->getFunction("j3StaticFieldLookup");
if (!func_j3StaticFieldLookup) {
func_j3StaticFieldLookup = Function::Create(
 /*Type=*/FuncTy_44,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3StaticFieldLookup", mod); // (external, no body)
func_j3StaticFieldLookup->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3StaticFieldLookup_PAL;
func_j3StaticFieldLookup->setAttributes(func_j3StaticFieldLookup_PAL);

Function* func_j3StringLookup = mod->getFunction("j3StringLookup");
if (!func_j3StringLookup) {
func_j3StringLookup = Function::Create(
 /*Type=*/FuncTy_44,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3StringLookup", mod); // (external, no body)
func_j3StringLookup->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3StringLookup_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_j3StringLookup_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_j3StringLookup->setAttributes(func_j3StringLookup_PAL);

Function* func_j3JavaObjectAquire = mod->getFunction("j3JavaObjectAquire");
if (!func_j3JavaObjectAquire) {
func_j3JavaObjectAquire = Function::Create(
 /*Type=*/FuncTy_51,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3JavaObjectAquire", mod); // (external, no body)
func_j3JavaObjectAquire->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3JavaObjectAquire_PAL;
func_j3JavaObjectAquire->setAttributes(func_j3JavaObjectAquire_PAL);

Function* func_j3JavaObjectRelease = mod->getFunction("j3JavaObjectRelease");
if (!func_j3JavaObjectRelease) {
func_j3JavaObjectRelease = Function::Create(
 /*Type=*/FuncTy_51,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3JavaObjectRelease", mod); // (external, no body)
func_j3JavaObjectRelease->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3JavaObjectRelease_PAL;
func_j3JavaObjectRelease->setAttributes(func_j3JavaObjectRelease_PAL);

Function* func_isAssignableFrom = mod->getFunction("isAssignableFrom");
if (!func_isAssignableFrom) {
func_isAssignableFrom = Function::Create(
 /*Type=*/FuncTy_52,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"isAssignableFrom", mod); // (external, no body)
func_isAssignableFrom->setCallingConv(CallingConv::C);
}
AttrListPtr func_isAssignableFrom_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_isAssignableFrom_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_isAssignableFrom->setAttributes(func_isAssignableFrom_PAL);

Function* func_isSecondaryClass = mod->getFunction("isSecondaryClass");
if (!func_isSecondaryClass) {
func_isSecondaryClass = Function::Create(
 /*Type=*/FuncTy_52,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"isSecondaryClass", mod); // (external, no body)
func_isSecondaryClass->setCallingConv(CallingConv::C);
}
AttrListPtr func_isSecondaryClass_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_isSecondaryClass_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_isSecondaryClass->setAttributes(func_isSecondaryClass_PAL);

Function* func_getClassDelegatee = mod->getFunction("getClassDelegatee");
if (!func_getClassDelegatee) {
func_getClassDelegatee = Function::Create(
 /*Type=*/FuncTy_53,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getClassDelegatee", mod); // (external, no body)
func_getClassDelegatee->setCallingConv(CallingConv::C);
}
AttrListPtr func_getClassDelegatee_PAL;
func_getClassDelegatee->setAttributes(func_getClassDelegatee_PAL);

Function* func_j3RuntimeDelegatee = mod->getFunction("j3RuntimeDelegatee");
if (!func_j3RuntimeDelegatee) {
func_j3RuntimeDelegatee = Function::Create(
 /*Type=*/FuncTy_53,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3RuntimeDelegatee", mod); // (external, no body)
func_j3RuntimeDelegatee->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3RuntimeDelegatee_PAL;
func_j3RuntimeDelegatee->setAttributes(func_j3RuntimeDelegatee_PAL);

Function* func_j3GetArrayClass = mod->getFunction("j3GetArrayClass");
if (!func_j3GetArrayClass) {
func_j3GetArrayClass = Function::Create(
 /*Type=*/FuncTy_54,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3GetArrayClass", mod); // (external, no body)
func_j3GetArrayClass->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3GetArrayClass_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_j3GetArrayClass_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_j3GetArrayClass->setAttributes(func_j3GetArrayClass_PAL);

Function* func_getFinalInt8Field = mod->getFunction("getFinalInt8Field");
if (!func_getFinalInt8Field) {
func_getFinalInt8Field = Function::Create(
 /*Type=*/FuncTy_55,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getFinalInt8Field", mod); // (external, no body)
func_getFinalInt8Field->setCallingConv(CallingConv::C);
}
AttrListPtr func_getFinalInt8Field_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getFinalInt8Field_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getFinalInt8Field->setAttributes(func_getFinalInt8Field_PAL);

Function* func_getFinalInt16Field = mod->getFunction("getFinalInt16Field");
if (!func_getFinalInt16Field) {
func_getFinalInt16Field = Function::Create(
 /*Type=*/FuncTy_56,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getFinalInt16Field", mod); // (external, no body)
func_getFinalInt16Field->setCallingConv(CallingConv::C);
}
AttrListPtr func_getFinalInt16Field_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getFinalInt16Field_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getFinalInt16Field->setAttributes(func_getFinalInt16Field_PAL);

Function* func_getFinalInt32Field = mod->getFunction("getFinalInt32Field");
if (!func_getFinalInt32Field) {
func_getFinalInt32Field = Function::Create(
 /*Type=*/FuncTy_58,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getFinalInt32Field", mod); // (external, no body)
func_getFinalInt32Field->setCallingConv(CallingConv::C);
}
AttrListPtr func_getFinalInt32Field_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getFinalInt32Field_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getFinalInt32Field->setAttributes(func_getFinalInt32Field_PAL);

Function* func_getFinalLongField = mod->getFunction("getFinalLongField");
if (!func_getFinalLongField) {
func_getFinalLongField = Function::Create(
 /*Type=*/FuncTy_59,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getFinalLongField", mod); // (external, no body)
func_getFinalLongField->setCallingConv(CallingConv::C);
}
AttrListPtr func_getFinalLongField_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getFinalLongField_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getFinalLongField->setAttributes(func_getFinalLongField_PAL);

Function* func_getFinalDoubleField = mod->getFunction("getFinalDoubleField");
if (!func_getFinalDoubleField) {
func_getFinalDoubleField = Function::Create(
 /*Type=*/FuncTy_61,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getFinalDoubleField", mod); // (external, no body)
func_getFinalDoubleField->setCallingConv(CallingConv::C);
}
AttrListPtr func_getFinalDoubleField_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getFinalDoubleField_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getFinalDoubleField->setAttributes(func_getFinalDoubleField_PAL);

Function* func_getFinalFloatField = mod->getFunction("getFinalFloatField");
if (!func_getFinalFloatField) {
func_getFinalFloatField = Function::Create(
 /*Type=*/FuncTy_63,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"getFinalFloatField", mod); // (external, no body)
func_getFinalFloatField->setCallingConv(CallingConv::C);
}
AttrListPtr func_getFinalFloatField_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = Attribute::None  | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_getFinalFloatField_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_getFinalFloatField->setAttributes(func_getFinalFloatField_PAL);

Function* func_j3ResolveVirtualStub = mod->getFunction("j3ResolveVirtualStub");
if (!func_j3ResolveVirtualStub) {
func_j3ResolveVirtualStub = Function::Create(
 /*Type=*/FuncTy_33,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ResolveVirtualStub", mod); // (external, no body)
func_j3ResolveVirtualStub->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ResolveVirtualStub_PAL;
func_j3ResolveVirtualStub->setAttributes(func_j3ResolveVirtualStub_PAL);

Function* func_j3ResolveSpecialStub = mod->getFunction("j3ResolveSpecialStub");
if (!func_j3ResolveSpecialStub) {
func_j3ResolveSpecialStub = Function::Create(
 /*Type=*/FuncTy_65,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ResolveSpecialStub", mod); // (external, no body)
func_j3ResolveSpecialStub->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ResolveSpecialStub_PAL;
func_j3ResolveSpecialStub->setAttributes(func_j3ResolveSpecialStub_PAL);

Function* func_j3ResolveStaticStub = mod->getFunction("j3ResolveStaticStub");
if (!func_j3ResolveStaticStub) {
func_j3ResolveStaticStub = Function::Create(
 /*Type=*/FuncTy_65,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ResolveStaticStub", mod); // (external, no body)
func_j3ResolveStaticStub->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ResolveStaticStub_PAL;
func_j3ResolveStaticStub->setAttributes(func_j3ResolveStaticStub_PAL);

Function* func_j3ResolveInterface = mod->getFunction("j3ResolveInterface");
if (!func_j3ResolveInterface) {
func_j3ResolveInterface = Function::Create(
 /*Type=*/FuncTy_66,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ResolveInterface", mod); // (external, no body)
func_j3ResolveInterface->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ResolveInterface_PAL;
func_j3ResolveInterface->setAttributes(func_j3ResolveInterface_PAL);

Function* func_j3NullPointerException = mod->getFunction("j3NullPointerException");
if (!func_j3NullPointerException) {
func_j3NullPointerException = Function::Create(
 /*Type=*/FuncTy_67,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3NullPointerException", mod); // (external, no body)
func_j3NullPointerException->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3NullPointerException_PAL;
func_j3NullPointerException->setAttributes(func_j3NullPointerException_PAL);

Function* func_j3ClassCastException = mod->getFunction("j3ClassCastException");
if (!func_j3ClassCastException) {
func_j3ClassCastException = Function::Create(
 /*Type=*/FuncTy_68,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ClassCastException", mod); // (external, no body)
func_j3ClassCastException->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ClassCastException_PAL;
func_j3ClassCastException->setAttributes(func_j3ClassCastException_PAL);

Function* func_j3IndexOutOfBoundsException = mod->getFunction("j3IndexOutOfBoundsException");
if (!func_j3IndexOutOfBoundsException) {
func_j3IndexOutOfBoundsException = Function::Create(
 /*Type=*/FuncTy_69,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3IndexOutOfBoundsException", mod); // (external, no body)
func_j3IndexOutOfBoundsException->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3IndexOutOfBoundsException_PAL;
func_j3IndexOutOfBoundsException->setAttributes(func_j3IndexOutOfBoundsException_PAL);

Function* func_j3NegativeArraySizeException = mod->getFunction("j3NegativeArraySizeException");
if (!func_j3NegativeArraySizeException) {
func_j3NegativeArraySizeException = Function::Create(
 /*Type=*/FuncTy_70,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3NegativeArraySizeException", mod); // (external, no body)
func_j3NegativeArraySizeException->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3NegativeArraySizeException_PAL;
func_j3NegativeArraySizeException->setAttributes(func_j3NegativeArraySizeException_PAL);

Function* func_j3OutOfMemoryError = mod->getFunction("j3OutOfMemoryError");
if (!func_j3OutOfMemoryError) {
func_j3OutOfMemoryError = Function::Create(
 /*Type=*/FuncTy_70,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3OutOfMemoryError", mod); // (external, no body)
func_j3OutOfMemoryError->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3OutOfMemoryError_PAL;
func_j3OutOfMemoryError->setAttributes(func_j3OutOfMemoryError_PAL);

Function* func_j3StackOverflowError = mod->getFunction("j3StackOverflowError");
if (!func_j3StackOverflowError) {
func_j3StackOverflowError = Function::Create(
 /*Type=*/FuncTy_67,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3StackOverflowError", mod); // (external, no body)
func_j3StackOverflowError->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3StackOverflowError_PAL;
func_j3StackOverflowError->setAttributes(func_j3StackOverflowError_PAL);

Function* func_j3ArrayStoreException = mod->getFunction("j3ArrayStoreException");
if (!func_j3ArrayStoreException) {
func_j3ArrayStoreException = Function::Create(
 /*Type=*/FuncTy_71,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ArrayStoreException", mod); // (external, no body)
func_j3ArrayStoreException->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ArrayStoreException_PAL;
func_j3ArrayStoreException->setAttributes(func_j3ArrayStoreException_PAL);

Function* func_j3ArithmeticException = mod->getFunction("j3ArithmeticException");
if (!func_j3ArithmeticException) {
func_j3ArithmeticException = Function::Create(
 /*Type=*/FuncTy_67,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ArithmeticException", mod); // (external, no body)
func_j3ArithmeticException->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ArithmeticException_PAL;
func_j3ArithmeticException->setAttributes(func_j3ArithmeticException_PAL);

Function* func_j3ThrowException = mod->getFunction("j3ThrowException");
if (!func_j3ThrowException) {
func_j3ThrowException = Function::Create(
 /*Type=*/FuncTy_51,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ThrowException", mod); // (external, no body)
func_j3ThrowException->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ThrowException_PAL;
func_j3ThrowException->setAttributes(func_j3ThrowException_PAL);

Function* func_j3ThrowExceptionFromJIT = mod->getFunction("j3ThrowExceptionFromJIT");
if (!func_j3ThrowExceptionFromJIT) {
func_j3ThrowExceptionFromJIT = Function::Create(
 /*Type=*/FuncTy_72,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3ThrowExceptionFromJIT", mod); // (external, no body)
func_j3ThrowExceptionFromJIT->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3ThrowExceptionFromJIT_PAL;
func_j3ThrowExceptionFromJIT->setAttributes(func_j3ThrowExceptionFromJIT_PAL);

Function* func_j3EndJNI = mod->getFunction("j3EndJNI");
if (!func_j3EndJNI) {
func_j3EndJNI = Function::Create(
 /*Type=*/FuncTy_73,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3EndJNI", mod); // (external, no body)
func_j3EndJNI->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3EndJNI_PAL;
func_j3EndJNI->setAttributes(func_j3EndJNI_PAL);

Function* func_j3StartJNI = mod->getFunction("j3StartJNI");
if (!func_j3StartJNI) {
func_j3StartJNI = Function::Create(
 /*Type=*/FuncTy_75,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3StartJNI", mod); // (external, no body)
func_j3StartJNI->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3StartJNI_PAL;
func_j3StartJNI->setAttributes(func_j3StartJNI_PAL);

Function* func_j3PrintExecution = mod->getFunction("j3PrintExecution");
if (!func_j3PrintExecution) {
func_j3PrintExecution = Function::Create(
 /*Type=*/FuncTy_76,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3PrintExecution", mod); // (external, no body)
func_j3PrintExecution->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3PrintExecution_PAL;
func_j3PrintExecution->setAttributes(func_j3PrintExecution_PAL);

Function* func_j3PrintMethodStart = mod->getFunction("j3PrintMethodStart");
if (!func_j3PrintMethodStart) {
func_j3PrintMethodStart = Function::Create(
 /*Type=*/FuncTy_77,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3PrintMethodStart", mod); // (external, no body)
func_j3PrintMethodStart->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3PrintMethodStart_PAL;
func_j3PrintMethodStart->setAttributes(func_j3PrintMethodStart_PAL);

Function* func_j3PrintMethodEnd = mod->getFunction("j3PrintMethodEnd");
if (!func_j3PrintMethodEnd) {
func_j3PrintMethodEnd = Function::Create(
 /*Type=*/FuncTy_77,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"j3PrintMethodEnd", mod); // (external, no body)
func_j3PrintMethodEnd->setCallingConv(CallingConv::C);
}
AttrListPtr func_j3PrintMethodEnd_PAL;
func_j3PrintMethodEnd->setAttributes(func_j3PrintMethodEnd_PAL);

// Global Variable Declarations


// Constant Definitions

// Global Variable Definitions

// Function Definitions

return mod;

}
