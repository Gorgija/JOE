# Set this variable to the top of the LLVM source tree.
# Set this as an environment var
# LLVM_SRC_ROOT =  /home/home/git/JEI/vmkit

# Set this variable to the top level directory where LLVM was built
# (this is *not* the same as OBJ_ROOT as defined in LLVM's Makefile.config).
# Set this as an environment var
# LLVM_OBJ_ROOT = /home/home/git/JEI/vmkit

# Define BYTECODE_LIBRARY before including LLVM's Makefile.common to get
# dependencies right.
BYTECODE_LIBRARY = 0
LLVMCC_OPTION = "clang"
ENABLE_BUILT_CLANG = 0
LLVMCC_EMITIR_FLAG = "-emit-llvm"
REQUIRES_EH = 1

ifeq ($(BUILD_FRAMETABLE), 1)
  BUILT_SOURCES = FrametablesSymbols.inc FrametablesExterns.inc
endif
  
# Include LLVM's Master Makefile.
include $(LLVM_OBJ_ROOT)/Makefile.llvm.common

LLVM_INC_DIR=-I$(shell $(LLVM_CONFIG) --includedir)
CXX.Flags += $(LLVM_INC_DIR) -fexceptions -Wno-variadic-macros -fno-omit-frame-pointer -fno-strict-aliasing -Wno-deprecated -ansi -fno-rtti
CXX.Flags += -g -D__WORDSIZE=32 -U__STRICT_ANSI__

# GNU Classpath flags
CLASSPATH_FLAGS =
GLIBJ = /home/ngeoffray/projects/classpath-0.97.2/lib/glibj.zip

# Using conditional compilation for now, until a proper interface/architecture
# is figured out and implemented.
ifeq (gnuclasspath,openjdk)
CXX.Flags += -DUSE_OPENJDK
endif

LIBS += -lz

include $(VMKIT_SRC_ROOT)/Makefile.rules
